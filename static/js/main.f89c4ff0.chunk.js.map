{"version":3,"sources":["services/firebase.js","helpers/database.js","helpers/auth.js","components/Header.js","modules/chats.js","pages/Friend.js","components/Layout.js","pages/Chat.js","pages/SignUp.js","pages/Login.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","firestore","signUp2","email","name","password","uid","console","log","ref","push","setRead","room","setRedux","setstate","list","on","snapshot","response","val","Object","keys","filter","key","values","signUp","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","Header","Fragment","Container","maxWidth","CssBaseline","AppBar","Toolbar","Typography","variant","onClick","signOut","SETROOMREDUX","SETDATA","SETALLMENU","REMOVE","setdata","new_list","type","initialState","roomnumber","chatdata","typemenu","allmenu","chats","state","action","new_room","todo","id","useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","connect","dispatch","setroomredux","classes","useState","users","setUsers","useEffect","handleOnChat","you","setRoom","List","className","length","map","data","index","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","secondary","flexGrow","paddingTop","padding","spacing","textAlign","color","text","Layout","Grid","container","item","xs","md","linkRenderer","marked","Renderer","flexDirection","lBox","display","rBox","appBar","top","bottom","left","height","inline","wordBreak","Marked","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","parse","desc","renderer","ALLOWED_TAGS","ALLOWED_ATTR","msg","setMsg","handleSumbit","e","a","preventDefault","message","timestamp","Date","now","currentUser","displayName","scrollTo","document","documentElement","scrollHeight","behavior","style","paddingBottom","alignItems","Box","justifyContent","alt","src","component","dateFns","Button","remove","position","onSubmit","placeholder","value","onChange","Copyright","align","Link","to","getFullYear","marginTop","avatar","margin","main","form","submit","SignUp","setEmail","setName","setPassword","handleOnChange","handleOnSubmit","then","res","noValidate","TextField","required","fullWidth","label","autoComplete","mt","Login","handleGoogleSignIn","autoFocus","PublicRoute","Component","authenticated","rest","render","PrivateRoute","pathname","from","location","loading","reducer","result","App","useReducer","onAuthStateChanged","user","path","Chat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","logger","createLogger","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f89c4ff0.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC08-esU5opJSWKjtXw_t0UVSqMdsW582o\",\r\n  authDomain: \"react-with-firebase-5c1a1.firebaseapp.com\",\r\n  databaseURL: \"https://react-with-firebase-5c1a1-default-rtdb.firebaseio.com\",\r\n  projectId: \"react-with-firebase-5c1a1\",\r\n  storageBucket: \"react-with-firebase-5c1a1.appspot.com\",\r\n  messagingSenderId: \"605147249976\",\r\n  appId: \"1:605147249976:web:a58f0fa4a677fce40b55cd\",\r\n  measurementId: \"G-6XEVNKHBQ7\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth;\r\nexport const firestore = firebase.firestore();\r\nexport const database = firebase.database();\r\n\r\n//const provider = new firebase.auth.GoogleAuthProvider();\r\n// GoogleAuthProvider 클래스를 authentication 라이브러리에서 사용할 수 있도록 불러오는 코드.\r\n//provider.setCustomParameters({prompt: 'select_account'});\r\n// signIn이랑 authentication을 위해서 GoogleAuthProvider를 사용할 때마다 구글 팝업을 항상 띄우기를 원한다는 의미이다.\r\n//export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n// signInWithPopup 메소드는 여러 파라미터를 받을 수 있다. 트위터, 페이스북, 깃허브 등으로도 로그인이 필요할 수도 있으므로.\r\n// 여기에서는 google로 signIn할 것이기 때문에, 파라미터로 위에서 정의한 provider를 넣어준다.\r\n\r\n// export default firebase;\r\n// 혹시 전체 라이브러리가 필요할지도 모르기 때문에 firebase도 export 해준다.","import { database } from \"../services/firebase\";\r\n// import { setdata } from '../modules/chats';\r\n\r\nexport function sendChat(data,room) {\r\n  // console.log(data)\r\n  return database.ref(`list/${room}`).push({\r\n    message: data.message,\r\n    timestamp: data.timestamp,\r\n    uid: data.uid,\r\n    name: data.name,\r\n  });\r\n}\r\n\r\nexport function signUp2(email, name, password, uid) {\r\n  console.log(\"가입2\", email, name, password);\r\n  return database.ref(\"users\").push({\r\n    email: email,\r\n    name: name,\r\n    password: password,\r\n    uid: uid,\r\n  });\r\n}\r\n\r\nexport const removeChats = (room,key) => {\r\n  database.ref(`list/${room}/${key}`).remove();\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const setRead = (room, setRedux,setstate) => {\r\n  let list = [];\r\n  database.ref(`list/${room}`).on(\"value\", (snapshot) => {\r\n    let response = snapshot.val();\r\n    if (response !== null) {\r\n      Object.keys(response).filter((key) => response[key]['key'] = key);\r\n      console.log('a', Object.values(response));\r\n      list = Object.values(response);\r\n    }\r\n    setRedux(list);\r\n    // setstate(list);\r\n  });\r\n};\r\n\r\n\r\nexport const setRoom = (you, setroomredux) => {\r\n    database.ref('list/').on(\"value\", (snapshot) => {\r\n      let response = Object.keys(snapshot.val());\r\n      console.log('체크1', response)\r\n\r\n      setroomredux(you);\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// export function getChats() {\r\n//   let chats = [];\r\n//   database.ref(\"chats\").on(\"value\", (snapshot) => {\r\n//     snapshot.forEach((row) => {\r\n//       chats.push(row.val());\r\n//     });\r\n//   });\r\n//   return chats;\r\n// }\r\n\r\n// export function getChats2() {\r\n//   var chats = [];\r\n//     database.ref(\"chats\").on(\"value\", (snapshot) => {\r\n//       chats = Object.values(snapshot.val());\r\n//     });\r\n//   console.log(chats)\r\n//   return chats;\r\n// }\r\n\r\n\r\n// export function dataRead3(room) {\r\n//   let hello = [];\r\n//   database.ref(room).on(\"value\", (snapshot) => {\r\n//     let response = snapshot.val();\r\n//     if (response !== null) {\r\n//       Object.keys(response).filter((key) => response[key]['key'] = key);\r\n//       // setChats(Object.values(response));\r\n//       // setdata(Object.values(response));\r\n//       // console.log('a', Object.values(response));\r\n//       hello = Object.values(response);\r\n//     }\r\n//     console.log(hello);\r\n    \r\n//   });\r\n//   return hello;\r\n// };\r\n\r\n","import { auth } from \"../services/firebase\";\r\n\r\nexport function signUp(email, password) {\r\n  console.log(\"가입\", email, password);\r\n  return auth().createUserWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function signIn(email, password) {\r\n  return auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return auth().signOut();\r\n}\r\n\r\nexport function signInWithGoogle() {\r\n  const provider = new auth.GoogleAuthProvider();\r\n  // provider.setCustomParameters({ prompt: 'select_account' });\r\n  return auth().signInWithPopup(provider);\r\n}\r\n","import React from 'react';\r\nimport { logout } from \"../helpers/auth\";\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n// import Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default function Header(props) {\r\n  return (\r\n      <React.Fragment>\r\n          <Container maxWidth=\"sm\">\r\n            <CssBaseline />\r\n            <HideOnScroll {...props}>\r\n                <AppBar>\r\n                <Toolbar>\r\n                            <Typography variant=\"h6\">동동님의 채팅방세상</Typography>\r\n                            <button onClick={() => { logout()}}>로그아웃</button>\r\n                </Toolbar>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            <Toolbar />\r\n      \r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}","const SETROOMREDUX = 'menu/SETROOMREDUX';\r\nconst SETDATA = 'menu/SETDATA';\r\nconst SETALLMENU = 'menu/SETALLMENU';\r\n// const SETDATA = 'menu/SETDATA';\r\nconst REMOVE = 'menu/REMOVE';\r\n\r\n\r\nexport const setroomredux = (new_room) => ({\r\n  type: SETROOMREDUX,\r\n  new_room,\r\n});\r\n\r\nexport const setdata = (new_list) => ({\r\n  type: SETDATA,\r\n  new_list,\r\n});\r\n\r\nexport const setallmenu = (new_list) => ({\r\n  type: SETALLMENU,\r\n  new_list,\r\n});\r\n\r\n// export const setdata = (data) => ({\r\n//   type: SETDATA,\r\n//   data,\r\n// });\r\n\r\nexport const remove = (id) => ({\r\n  type: REMOVE,\r\n  id,\r\n});\r\n\r\nconst initialState = {\r\n  roomnumber:'0',\r\n  chatdata:[],\r\n  typemenu: [],\r\n  allmenu: [],\r\n};\r\n\r\nfunction chats(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case SETROOMREDUX:\r\n      return {\r\n        ...state,\r\n        roomnumber : action.new_room\r\n      };\r\n\r\n    case SETDATA:\r\n      return {\r\n        ...state,\r\n        chatdata: action.new_list,\r\n      };\r\n\r\n    case SETALLMENU:\r\n      return {\r\n        ...state,\r\n        allmenu: action.new_list,\r\n      };\r\n\r\n\r\n\r\n    case REMOVE:\r\n      return {\r\n        ...state,\r\n        allmenu: state.allmenu.filter((todo) => todo.id !== action.id),\r\n      };\r\n\r\n    // case SETDATA:\r\n    //   return {\r\n    //     ...state,\r\n    //     typemenu: state.allmenu.filter((todo) => todo.type === action.data),\r\n    //   };\r\n    // case CHANGE_INPUT:\r\n    //   return {\r\n    //     ...state,\r\n    //     input: action.input,\r\n    //   };\r\n    // case INSERT:\r\n    //   return {\r\n    //     ...state,\r\n    //     todos: state.todos.concat(action.todo),\r\n    //   };\r\n\r\n    // case TOGGLE:\r\n    //   return {\r\n    //     ...state,\r\n    //     todos: state.todos.map((todo) =>\r\n    //       todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n    //     ),\r\n    //   };\r\n\r\n    // case REMOVE:\r\n    //   return {\r\n    //     ...state,\r\n    //     todos: state.todos.filter((todo) => todo.id !== action.id),\r\n    //   };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default chats;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { database } from \"../services/firebase\";\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// import ImageIcon from '@material-ui/icons/Image';\r\n// import WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\n\r\nimport { setRead, setRoom } from \"../helpers/database\";\r\nimport { connect } from 'react-redux';\r\nimport { setdata,setroomredux } from '../modules/chats';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst Friend = ({ setdata,setroomredux }) => {\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState([]);\r\n    \r\n\r\nconst DataRead = () => {\r\n  database.ref(\"users\").on(\"value\", (snapshot) => {\r\n      let response = snapshot.val();\r\n      console.log(response)\r\n      if (response !== null) {\r\n          setUsers(Object.values(response));\r\n      }\r\n    // if (response !== null) {\r\n    //   Object.keys(response).filter((key) => response[key]['key'] = key);\r\n    //   setChats(Object.values(response));\r\n    // }\r\n    //console.log(response);\r\n    // scrollToBottom();\r\n  });\r\n};\r\n\r\n  useEffect(() => {\r\n    DataRead()\r\n    \r\n      //return () => database().ref('chats').off('value', response);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n    const handleOnChat = (you) => {\r\n        setRoom(you,setroomredux)\r\n        // setroomredux(`${me}+${you}`);\r\n\t    setRead(you, setdata);\r\n  };\r\n    \r\n    return (\r\n        <List className={classes.root}>\r\n            {users.length > 0 ? (\r\n              users.map((data, index) => (\r\n                <ListItem key={index} button onClick={()=>handleOnChat(data.uid)}>\r\n                    <ListItemAvatar>\r\n                    <Avatar>\r\n                        <BeachAccessIcon />\r\n                    </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={ data.name } secondary={ data.email } />\r\n                </ListItem>  \r\n              ))\r\n            ) : (\r\n                <li>리스트가없습니다.</li>\r\n            )}\r\n        </List>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setdata: (val) => {\r\n    dispatch(setdata(val));\r\n    },\r\n  setroomredux: (val) => {\r\n    dispatch(setroomredux(val));\r\n  },\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Friend);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Friend from '../pages/Friend';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: '64px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Layout = ({ children }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n    <Container maxWidth=\"md\" className={classes.root}>\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12} md={4}>\r\n              <Friend />\r\n            </Grid>  \r\n            <Grid item xs={12} md={8}>\r\n                {children}\r\n            </Grid>\r\n        </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React,{useEffect,useState} from 'react';\r\n\r\n\r\n\r\nimport * as dateFns from \"date-fns\";\r\nimport { auth } from \"../services/firebase\";\r\nimport { sendChat, removeChats, setRead } from \"../helpers/database\";\r\nimport { Container,Box,Grid,List,ListItem,ListItemText,ListItemAvatar,Avatar,Typography,Button  } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport marked from 'marked';\r\nimport DOMPurify from 'dompurify';\r\n\r\nimport Layout from '../components/Layout';\r\n\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setdata } from '../modules/chats';\r\n\r\n\r\n\r\n\r\nconst linkRenderer = new marked.Renderer();\r\n\r\n/* icon */\r\n// import ImageIcon from '@material-ui/icons/Image';\r\n// import WorkIcon from '@material-ui/icons/Work';\r\n// import BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  lBox: {\r\n    flexDirection: 'row-reverse',\r\n    display: 'flex',\r\n    textAlign: 'right'\r\n  },\r\n  rBox: {\r\n    flexDirection: 'row-reverse',\r\n    display: 'flex',\r\n    textAlign: 'right'\r\n  },\r\n    appBar: {\r\n      top: 'auto',\r\n      bottom: 0,\r\n      left: 0,\r\n      width:'100%',\r\n      '& input,& button': {\r\n        width: '100%',\r\n        height: '50px'\r\n      }\r\n  },\r\n  inline: {\r\n    wordBreak: 'break-all',\r\n  }\r\n}));\r\n\r\n\r\nconst Marked = (props) => (\r\n  <>\r\n    <span\r\n      dangerouslySetInnerHTML={{\r\n        __html: DOMPurify.sanitize(\r\n          marked.parse(props.desc, { renderer: linkRenderer }),\r\n          {\r\n            ALLOWED_TAGS: ['h1','h2','h3','h4','h5','strong','a'],\r\n            ALLOWED_ATTR: ['href', 'target', 'title'],\r\n          }\r\n        ),\r\n      }}\r\n    />\r\n  </>\r\n);\r\n\r\n\r\nconst Chat = ({ setdata, chatdata, roomnumber }) => {\r\n  const classes = useStyles();\r\n\r\n  const scrollToBottom = () =>{ \r\n    window.scrollTo({ \r\n      top: document.documentElement.scrollHeight, \r\n      behavior: 'auto'\r\n      /* you can also use 'auto' behaviour \r\n         in place of 'smooth' */\r\n    }); \r\n  }; \r\n\r\nconst [msg, setMsg] = useState(\"\");\r\n  // const [chats, setChats] = useState(chatdata);\r\n  \r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\nconst handleSumbit = async (e) => {\r\n  e.preventDefault();\r\n  setMsg('');\r\n  try{\r\n    await sendChat({\r\n      message: msg,\r\n      timestamp: Date.now(),\r\n      uid: auth().currentUser.uid,\r\n      name: auth().currentUser.displayName === null ? auth().currentUser.email : auth().currentUser.displayName\r\n    },roomnumber);\r\n    scrollToBottom();\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n};  \r\n\r\n  \r\n  \r\n  useEffect(() => {\r\n    setRead(roomnumber, setdata);\r\n  //return () => database().ref('chats').off('value', response);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps  \r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Layout>\r\n    <Container maxWidth=\"sm\" style={{paddingBottom: '60px'}}>\r\n        <Header />\r\n        <div className=\"chat-middle\">\r\n          <List className={classes.root}>\r\n            {chatdata.length > 0 ? (\r\n              chatdata.map((data, index) => (\r\n                <ListItem key={index} alignItems=\"flex-start\" style={{ display: 'block' }}>\r\n                  <Box style={{\r\n                      display: 'flex',\r\n                    flexDirection: auth().currentUser.uid === data.uid ? 'row' : 'row-reverse',\r\n                        textAlign: auth().currentUser.uid === data.uid ? 'left' : 'right'\r\n                    }}>\r\n                    <ListItemAvatar style={{\r\n                          display: 'flex',\r\n                          justifyContent : auth().currentUser.uid !== data.uid ? 'flex-end' : 'flex-start',\r\n                      }}>\r\n                      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={data.name}\r\n                        secondary={\r\n                          <React.Fragment>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              variant=\"body2\"\r\n                              className={classes.inline}\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              {/* {data.message} */}\r\n                              <Marked desc={data.message}></Marked>\r\n                            </Typography>\r\n                            <br />\r\n                            {dateFns.format(data.timestamp, \"yyyy-MM-dd-HH-mm-ss\")}\r\n                          </React.Fragment>\r\n                        }\r\n                    />\r\n                    <Button style={{ display: auth().currentUser.uid !== data.uid ? 'none' : 'inline-flex' }} onClick={()=>removeChats(roomnumber,data.key)}>삭제</Button>\r\n                  </Box>\r\n                </ListItem>                  \r\n              ))\r\n              ) : (\r\n                <li>리스트가없습니다.</li>\r\n              )}\r\n          </List>\r\n      </div>\r\n      \r\n      <Box position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        <Container maxWidth=\"sm\">\r\n          <form onSubmit={handleSumbit}>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={10} spacing={0}>\r\n                <input\r\n                  placeholder=\"내용을 입력하세요.\"\r\n                  value={msg}\r\n                  onChange={handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid container item xs={2} spacing={0}>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">전송</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Container>\r\n      </Box>\r\n\r\n      </Container>\r\n      </Layout>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roomnumber: state.chats.roomnumber,\r\n  chatdata: state.chats.chatdata,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setdata: (val) => {\r\n    dispatch(setdata(val));\r\n  },\r\n  // remove: (val) => {\r\n  //   dispatch(remove(val));\r\n  // },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signUp } from \"../helpers/auth\";\r\nimport { signUp2 } from \"../helpers/database\";\r\nimport { auth } from \"../services/firebase\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Button component={Link} to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Button>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignUp() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    const type = e.target.name;\r\n    if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (type === \"name\") {\r\n      setName(e.target.value);\r\n    } else if (type === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (email !== \"\" && password !== \"\") {\r\n      try {\r\n        await signUp(email, password).then((res) => {\r\n          console.log(\"res\", res);\r\n          signUp2(email, name, password, auth().currentUser.uid);\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        console.log(\r\n          error.message ===\r\n            \"The email address is already in use by another account.\" &&\r\n            \"이미 있는 아이디입니다.\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          회원 가입\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\r\n          <Grid container spacing={2}>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={handleOnChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                value={name}\r\n                onChange={handleOnChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={handleOnChange}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            가입하기\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              이미 회원이신가?{\" \"}\r\n              <Button component={Link} to=\"/login\">\r\n                로그인\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signIn, signInWithGoogle } from \"../helpers/auth\";\r\n\r\n\r\n\r\n\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Button component={Link} to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Button>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    const type = e.target.name;\r\n    if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (type === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (email !== \"\" && password !== \"\") {\r\n      try {\r\n        await signIn(email, password).then((res) => console.log(res));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  return (    \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleOnSubmit} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"이메일을 입력하세요.\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={handleOnChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={handleOnChange}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleGoogleSignIn}\r\n            className={classes.submit}\r\n          >\r\n            구글 로그인\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              {/* <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link> */}\r\n            </Grid>\r\n            <Grid item>\r\n              <Button component={Link} to=\"/signup\">\r\n                {\"회원가입\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === false ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/chat\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PublicRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","import React, { useReducer, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { auth } from \"./services/firebase\";\n\n// import \"./styles.css\";\n\nimport Chat from \"./pages/Chat\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nconst initialState = {\n  authenticated: false,\n  loading: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_USER\":\n      return { ...state, authenticated: action.result };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { authenticated } = state;\n  \n  useEffect(() => {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        dispatch({\n          type: \"GET_USER\",\n          result: true,\n        });\n      } else {\n        dispatch({\n          type: \"GET_USER\",\n          result: false,\n        });\n      }\n    });\n  }, []);\n  \n  return (\n    <Router>\n      <Switch>\n        {/* <PrivateRoute\n          path=\"/friend\"\n          authenticated={authenticated}\n          component={Friend}\n        /> */}\n        <PrivateRoute\n          path=\"/chat\"\n          authenticated={authenticated}\n          component={Chat}\n        />\n        <PublicRoute\n          path=\"/signup\"\n          authenticated={authenticated}\n          component={SignUp}\n        />\n        <PublicRoute\n          path={[\"/\", \"/login\"]}\n          authenticated={authenticated}\n          component={Login}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport chats from './chats';\r\n// import todos from './todos';\r\n\r\nconst rootReducer = combineReducers({\r\n  chats,\r\n//   todos,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nimport rootReducer from './modules';\nimport { createLogger } from 'redux-logger';\n\nconst logger = createLogger();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(logger)),\n);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}