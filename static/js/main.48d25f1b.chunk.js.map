{"version":3,"sources":["services/firebase.js","helpers/database.js","helpers/auth.js","components/Header.js","modules/chats.js","pages/Friend.js","components/Layout.js","pages/Chat.js","pages/SignUp.js","pages/Login.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","firestore","signUp2","email","name","password","uid","console","log","ref","push","setRead","room","setRedux","setstate","list","on","snapshot","response","val","Object","keys","filter","key","values","signUp","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","connect","state","me","chats","userdata","Fragment","Container","maxWidth","CssBaseline","AppBar","Toolbar","Typography","variant","currentUser","onClick","signOut","SETME","SETROOMREDUX","SETDATA","SETUSERS","SETALLMENU","REMOVE","setdata","new_list","type","initialState","roomnumber","chatdata","allmenu","action","new_me","new_room","new_user","todo","id","useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","dispatch","setroomredux","setusers","setme","classes","useEffect","length","a","dfs","data","indexOf","fond","handleOnChat","you","setRoom","List","className","map","index","ListItem","button","style","border","ListItemAvatar","Avatar","ListItemText","primary","secondary","flexGrow","paddingTop","padding","spacing","textAlign","color","text","Layout","Grid","container","item","xs","md","linkRenderer","marked","Renderer","flexDirection","lBox","display","rBox","appBar","top","bottom","left","height","inline","wordBreak","Marked","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","parse","desc","renderer","ALLOWED_TAGS","ALLOWED_ATTR","useState","msg","setMsg","handleSumbit","e","preventDefault","message","timestamp","Date","now","displayName","scrollTo","document","documentElement","scrollHeight","behavior","paddingBottom","alignItems","Box","justifyContent","alt","src","component","dateFns","Button","remove","position","onSubmit","placeholder","value","onChange","Copyright","align","Link","to","getFullYear","marginTop","avatar","margin","main","form","submit","SignUp","setEmail","setName","setPassword","handleOnChange","handleOnSubmit","then","res","noValidate","TextField","required","fullWidth","label","autoComplete","mt","Login","handleGoogleSignIn","autoFocus","PublicRoute","Component","authenticated","rest","render","PrivateRoute","pathname","from","location","loading","reducer","result","App","useReducer","onAuthStateChanged","user","path","Chat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","logger","createLogger","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.48d25f1b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC08-esU5opJSWKjtXw_t0UVSqMdsW582o\",\r\n  authDomain: \"react-with-firebase-5c1a1.firebaseapp.com\",\r\n  databaseURL: \"https://react-with-firebase-5c1a1-default-rtdb.firebaseio.com\",\r\n  projectId: \"react-with-firebase-5c1a1\",\r\n  storageBucket: \"react-with-firebase-5c1a1.appspot.com\",\r\n  messagingSenderId: \"605147249976\",\r\n  appId: \"1:605147249976:web:a58f0fa4a677fce40b55cd\",\r\n  measurementId: \"G-6XEVNKHBQ7\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth;\r\nexport const firestore = firebase.firestore();\r\nexport const database = firebase.database();\r\n\r\n//const provider = new firebase.auth.GoogleAuthProvider();\r\n// GoogleAuthProvider 클래스를 authentication 라이브러리에서 사용할 수 있도록 불러오는 코드.\r\n//provider.setCustomParameters({prompt: 'select_account'});\r\n// signIn이랑 authentication을 위해서 GoogleAuthProvider를 사용할 때마다 구글 팝업을 항상 띄우기를 원한다는 의미이다.\r\n//export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n// signInWithPopup 메소드는 여러 파라미터를 받을 수 있다. 트위터, 페이스북, 깃허브 등으로도 로그인이 필요할 수도 있으므로.\r\n// 여기에서는 google로 signIn할 것이기 때문에, 파라미터로 위에서 정의한 provider를 넣어준다.\r\n\r\n// export default firebase;\r\n// 혹시 전체 라이브러리가 필요할지도 모르기 때문에 firebase도 export 해준다.","import { database } from \"../services/firebase\";\r\n// import { setdata } from '../modules/chats';\r\n\r\nexport function sendChat(data,room) {\r\n  // console.log(data)\r\n  return database.ref(`list/${room}`).push({\r\n    message: data.message,\r\n    timestamp: data.timestamp,\r\n    uid: data.uid,\r\n    name: data.name,\r\n  });\r\n}\r\n\r\nexport function signUp2(email, name, password, uid) {\r\n  console.log(\"가입2\", email, name, password);\r\n  return database.ref(\"users\").push({\r\n    email: email,\r\n    name: name,\r\n    password: password,\r\n    uid: uid,\r\n  });\r\n}\r\n\r\nexport const removeChats = (room,key) => {\r\n  database.ref(`list/${room}/${key}`).remove();\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const setRead = (room, setRedux,setstate) => {\r\n  let list = [];\r\n  database.ref(`list/${room}`).on(\"value\", (snapshot) => {\r\n    let response = snapshot.val();\r\n    if (response !== null) {\r\n      Object.keys(response).filter((key) => response[key]['key'] = key);\r\n      console.log('a', Object.values(response));\r\n      list = Object.values(response);\r\n    }\r\n    setRedux(list);\r\n    // setstate(list);\r\n  });\r\n};\r\n\r\n\r\nexport const setRoom = (you, setroomredux) => {\r\n    database.ref('list/').on(\"value\", (snapshot) => {\r\n      let response = Object.keys(snapshot.val());\r\n      console.log('체크1', response)\r\n\r\n      setroomredux(you);\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// export function getChats() {\r\n//   let chats = [];\r\n//   database.ref(\"chats\").on(\"value\", (snapshot) => {\r\n//     snapshot.forEach((row) => {\r\n//       chats.push(row.val());\r\n//     });\r\n//   });\r\n//   return chats;\r\n// }\r\n\r\n// export function getChats2() {\r\n//   var chats = [];\r\n//     database.ref(\"chats\").on(\"value\", (snapshot) => {\r\n//       chats = Object.values(snapshot.val());\r\n//     });\r\n//   console.log(chats)\r\n//   return chats;\r\n// }\r\n\r\n\r\n// export function dataRead3(room) {\r\n//   let hello = [];\r\n//   database.ref(room).on(\"value\", (snapshot) => {\r\n//     let response = snapshot.val();\r\n//     if (response !== null) {\r\n//       Object.keys(response).filter((key) => response[key]['key'] = key);\r\n//       // setChats(Object.values(response));\r\n//       // setdata(Object.values(response));\r\n//       // console.log('a', Object.values(response));\r\n//       hello = Object.values(response);\r\n//     }\r\n//     console.log(hello);\r\n    \r\n//   });\r\n//   return hello;\r\n// };\r\n\r\n","import { auth } from \"../services/firebase\";\r\n\r\nexport function signUp(email, password) {\r\n  console.log(\"가입\", email, password);\r\n  return auth().createUserWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function signIn(email, password) {\r\n  return auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return auth().signOut();\r\n}\r\n\r\nexport function signInWithGoogle() {\r\n  const provider = new auth.GoogleAuthProvider();\r\n  // provider.setCustomParameters({ prompt: 'select_account' });\r\n  return auth().signInWithPopup(provider);\r\n}\r\n","import React from \"react\";\r\nimport { logout } from \"../helpers/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\n// import Box from '@material-ui/core/Box';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nimport { auth } from \"../services/firebase\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst Header = (props) => {\r\n  const { me } = props;\r\n  // const [result, setResult] = useState([]);\r\n\r\n  // const Hello = (a) => {\r\n\r\n  //   let gogo = a.filter(data => data.uid.includes(auth().currentUser.uid));\r\n  //   console.log('gogo',gogo)\r\n  //   setResult(gogo)\r\n\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"sm\">\r\n        <CssBaseline />\r\n        <HideOnScroll {...props}>\r\n          <AppBar>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">\r\n                {me ? me.name : auth().currentUser.email}님의 채팅방세상\r\n              </Typography>\r\n              <button\r\n                onClick={() => {\r\n                  logout();\r\n                }}\r\n              >\r\n                로그아웃\r\n              </button>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </HideOnScroll>\r\n        <Toolbar />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  me: state.chats.me,\r\n  userdata: state.chats.userdata,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Header);\r\n","const SETME = 'menu/SETME';\r\nconst SETROOMREDUX = 'menu/SETROOMREDUX';\r\nconst SETDATA = 'menu/SETDATA';\r\nconst SETUSERS = 'menu/SETUSERS';\r\nconst SETALLMENU = 'menu/SETALLMENU';\r\n// const SETDATA = 'menu/SETDATA';\r\nconst REMOVE = 'menu/REMOVE';\r\n\r\nexport const setme = (new_me) => ({\r\n  type: SETME,\r\n  new_me,\r\n});\r\n\r\n\r\nexport const setroomredux = (new_room) => ({\r\n  type: SETROOMREDUX,\r\n  new_room,\r\n});\r\n\r\nexport const setdata = (new_list) => ({\r\n  type: SETDATA,\r\n  new_list,\r\n});\r\n\r\nexport const setusers = (new_user) => ({\r\n  type: SETUSERS,\r\n  new_user,\r\n});\r\n\r\n// export const setdata = (data) => ({\r\n//   type: SETDATA,\r\n//   data,\r\n// });\r\n\r\nexport const remove = (id) => ({\r\n  type: REMOVE,\r\n  id,\r\n});\r\n\r\nconst initialState = {\r\n  me:'.',\r\n  roomnumber:'0',\r\n  chatdata:[],\r\n  userdata: [],\r\n  allmenu: [],\r\n};\r\n\r\nfunction chats(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case SETME:\r\n      return {\r\n        ...state,\r\n        me : action.new_me\r\n      };\r\n\r\n    case SETROOMREDUX:\r\n      return {\r\n        ...state,\r\n        roomnumber : action.new_room\r\n      };\r\n\r\n    case SETDATA:\r\n      return {\r\n        ...state,\r\n        chatdata: action.new_list,\r\n      };\r\n\r\n    case SETUSERS:\r\n      return {\r\n        ...state,\r\n        userdata: action.new_user,\r\n      };\r\n    \r\n    case SETALLMENU:\r\n      return {\r\n        ...state,\r\n        allmenu: action.new_list,\r\n      };\r\n\r\n\r\n\r\n    case REMOVE:\r\n      return {\r\n        ...state,\r\n        allmenu: state.allmenu.filter((todo) => todo.id !== action.id),\r\n      };\r\n\r\n    // case SETDATA:\r\n    //   return {\r\n    //     ...state,\r\n    //     typemenu: state.allmenu.filter((todo) => todo.type === action.data),\r\n    //   };\r\n    // case CHANGE_INPUT:\r\n    //   return {\r\n    //     ...state,\r\n    //     input: action.input,\r\n    //   };\r\n    // case INSERT:\r\n    //   return {\r\n    //     ...state,\r\n    //     todos: state.todos.concat(action.todo),\r\n    //   };\r\n\r\n    // case TOGGLE:\r\n    //   return {\r\n    //     ...state,\r\n    //     todos: state.todos.map((todo) =>\r\n    //       todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n    //     ),\r\n    //   };\r\n\r\n    // case REMOVE:\r\n    //   return {\r\n    //     ...state,\r\n    //     todos: state.todos.filter((todo) => todo.id !== action.id),\r\n    //   };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default chats;","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { database } from \"../services/firebase\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n// import ImageIcon from '@material-ui/icons/Image';\r\n// import WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\n\r\nimport { setRead, setRoom } from \"../helpers/database\";\r\nimport { connect } from \"react-redux\";\r\nimport { setdata, setroomredux, setusers, setme } from \"../modules/chats\";\r\nimport { auth } from \"../services/firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst Friend = ({\r\n  setdata,\r\n  setroomredux,\r\n  setusers,\r\n  userdata,\r\n  setme,\r\n  me,\r\n  roomnumber,\r\n}) => {\r\n  const classes = useStyles();\r\n  // const [users, setUsers] = useState([]);\r\n\r\n  const DataRead = () => {\r\n    database.ref(\"users\").on(\"value\", (snapshot) => {\r\n      let response = snapshot.val();\r\n      console.log(response);\r\n      if (response !== null) {\r\n        setusers(Object.values(response));\r\n      }\r\n      // if (response !== null) {\r\n      //   Object.keys(response).filter((key) => response[key]['key'] = key);\r\n      //   setChats(Object.values(response));\r\n      // }\r\n      //console.log(response);\r\n      // scrollToBottom();\r\n    });\r\n  };\r\n\r\n  const fond = (a) => {\r\n    //console.log(a)\r\n    //console.log(auth().currentUser.uid)\r\n\r\n    const dfs = a.filter((data) => !data.uid.indexOf(auth().currentUser.uid));\r\n    setme(dfs[0]);\r\n  };\r\n\r\n  //const ee = (userdata.length > 0 && fond(userdata));\r\n  //if (userdata.length) return ( ee )\r\n\r\n  console.log(\"userdata\", userdata);\r\n\r\n  useEffect(() => {\r\n    DataRead();\r\n\r\n    //return () => database().ref('chats').off('value', response);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    userdata.length > 0 && fond(userdata);\r\n    //return () => database().ref('chats').off('value', response);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userdata]);\r\n\r\n  const handleOnChat = (you) => {\r\n    setRoom(you, setroomredux);\r\n    // setroomredux(`${me}+${you}`);\r\n    setRead(you, setdata);\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {userdata.length > 0 ? (\r\n        userdata.map((data, index) => (\r\n          <ListItem\r\n            key={index}\r\n            button\r\n            onClick={() => handleOnChat(data.uid)}\r\n            style={{\r\n              border: data.uid === roomnumber ? \"1px solid #000\" : \"0\",\r\n              // display: data.uid === me.uid ? \"none\" : \"flex\",\r\n            }}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <BeachAccessIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={data.name} secondary={data.email} />\r\n          </ListItem>\r\n        ))\r\n      ) : (\r\n        <li>리스트가없습니다.</li>\r\n      )}\r\n    </List>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userdata: state.chats.userdata,\r\n  roomnumber: state.chats.roomnumber,\r\n  me: state.chats.me,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setdata: (val) => {\r\n    dispatch(setdata(val));\r\n  },\r\n  setroomredux: (val) => {\r\n    dispatch(setroomredux(val));\r\n  },\r\n  setusers: (val) => {\r\n    dispatch(setusers(val));\r\n  },\r\n  setme: (val) => {\r\n    dispatch(setme(val));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Friend);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Friend from '../pages/Friend';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: '64px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst Layout = ({ children }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n    <Container maxWidth=\"md\" className={classes.root}>\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12} md={4}>\r\n              <Friend />\r\n            </Grid>  \r\n            <Grid item xs={12} md={8}>\r\n                {children}\r\n            </Grid>\r\n        </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React,{useEffect,useState} from 'react';\r\n\r\n\r\n\r\nimport * as dateFns from \"date-fns\";\r\nimport { auth } from \"../services/firebase\";\r\nimport { sendChat, removeChats, setRead } from \"../helpers/database\";\r\nimport { Container,Box,Grid,List,ListItem,ListItemText,ListItemAvatar,Avatar,Typography,Button  } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Header from '../components/Header';\r\n\r\nimport marked from 'marked';\r\nimport DOMPurify from 'dompurify';\r\n\r\nimport Layout from '../components/Layout';\r\n\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setdata } from '../modules/chats';\r\n\r\n\r\n\r\n\r\nconst linkRenderer = new marked.Renderer();\r\n\r\n/* icon */\r\n// import ImageIcon from '@material-ui/icons/Image';\r\n// import WorkIcon from '@material-ui/icons/Work';\r\n// import BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  lBox: {\r\n    flexDirection: 'row-reverse',\r\n    display: 'flex',\r\n    textAlign: 'right'\r\n  },\r\n  rBox: {\r\n    flexDirection: 'row-reverse',\r\n    display: 'flex',\r\n    textAlign: 'right'\r\n  },\r\n    appBar: {\r\n      top: 'auto',\r\n      bottom: 0,\r\n      left: 0,\r\n      width:'100%',\r\n      '& input,& button': {\r\n        width: '100%',\r\n        height: '50px'\r\n      }\r\n  },\r\n  inline: {\r\n    wordBreak: 'break-all',\r\n  }\r\n}));\r\n\r\n\r\nconst Marked = (props) => (\r\n  <>\r\n    <span\r\n      dangerouslySetInnerHTML={{\r\n        __html: DOMPurify.sanitize(\r\n          marked.parse(props.desc, { renderer: linkRenderer }),\r\n          {\r\n            ALLOWED_TAGS: ['h1','h2','h3','h4','h5','strong','a'],\r\n            ALLOWED_ATTR: ['href', 'target', 'title'],\r\n          }\r\n        ),\r\n      }}\r\n    />\r\n  </>\r\n);\r\n\r\n\r\nconst Chat = ({ setdata, chatdata, roomnumber }) => {\r\n  const classes = useStyles();\r\n\r\n  const scrollToBottom = () =>{ \r\n    window.scrollTo({ \r\n      top: document.documentElement.scrollHeight, \r\n      behavior: 'auto'\r\n      /* you can also use 'auto' behaviour \r\n         in place of 'smooth' */\r\n    }); \r\n  }; \r\n\r\nconst [msg, setMsg] = useState(\"\");\r\n  // const [chats, setChats] = useState(chatdata);\r\n  \r\n  const handleOnChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n\r\nconst handleSumbit = async (e) => {\r\n  e.preventDefault();\r\n  setMsg('');\r\n  try{\r\n    await sendChat({\r\n      message: msg,\r\n      timestamp: Date.now(),\r\n      uid: auth().currentUser.uid,\r\n      name: auth().currentUser.displayName === null ? auth().currentUser.email : auth().currentUser.displayName\r\n    },roomnumber);\r\n    scrollToBottom();\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n};  \r\n\r\n  \r\n  \r\n  useEffect(() => {\r\n    setRead(roomnumber, setdata);\r\n  //return () => database().ref('chats').off('value', response);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps  \r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Layout>\r\n    <Container maxWidth=\"sm\" style={{paddingBottom: '60px'}}>\r\n        <Header />\r\n        <div className=\"chat-middle\">\r\n          <List className={classes.root}>\r\n            {chatdata.length > 0 ? (\r\n              chatdata.map((data, index) => (\r\n                <ListItem key={index} alignItems=\"flex-start\" style={{ display: 'block' }}>\r\n                  <Box style={{\r\n                      display: 'flex',\r\n                    flexDirection: auth().currentUser.uid === data.uid ? 'row' : 'row-reverse',\r\n                        textAlign: auth().currentUser.uid === data.uid ? 'left' : 'right'\r\n                    }}>\r\n                    <ListItemAvatar style={{\r\n                          display: 'flex',\r\n                          justifyContent : auth().currentUser.uid !== data.uid ? 'flex-end' : 'flex-start',\r\n                      }}>\r\n                      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={data.name}\r\n                        secondary={\r\n                          <React.Fragment>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              variant=\"body2\"\r\n                              className={classes.inline}\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              {/* {data.message} */}\r\n                              <Marked desc={data.message}></Marked>\r\n                            </Typography>\r\n                            <br />\r\n                            {dateFns.format(data.timestamp, \"yyyy-MM-dd-HH-mm-ss\")}\r\n                          </React.Fragment>\r\n                        }\r\n                    />\r\n                    <Button style={{ display: auth().currentUser.uid !== data.uid ? 'none' : 'inline-flex' }} onClick={()=>removeChats(roomnumber,data.key)}>삭제</Button>\r\n                  </Box>\r\n                </ListItem>                  \r\n              ))\r\n              ) : (\r\n                <li>리스트가없습니다.</li>\r\n              )}\r\n          </List>\r\n      </div>\r\n      \r\n      <Box position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        <Container maxWidth=\"sm\">\r\n          <form onSubmit={handleSumbit}>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={10} spacing={0}>\r\n                <input\r\n                  placeholder=\"내용을 입력하세요.\"\r\n                  value={msg}\r\n                  onChange={handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid container item xs={2} spacing={0}>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">전송</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Container>\r\n      </Box>\r\n\r\n      </Container>\r\n      </Layout>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roomnumber: state.chats.roomnumber,\r\n  chatdata: state.chats.chatdata,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setdata: (val) => {\r\n    dispatch(setdata(val));\r\n  },\r\n  // remove: (val) => {\r\n  //   dispatch(remove(val));\r\n  // },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signUp } from \"../helpers/auth\";\r\nimport { signUp2 } from \"../helpers/database\";\r\nimport { auth } from \"../services/firebase\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Button component={Link} to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Button>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction SignUp() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    const type = e.target.name;\r\n    if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (type === \"name\") {\r\n      setName(e.target.value);\r\n    } else if (type === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (email !== \"\" && password !== \"\") {\r\n      try {\r\n        await signUp(email, password).then((res) => {\r\n          console.log(\"res\", res);\r\n          signUp2(email, name, password, auth().currentUser.uid);\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        console.log(\r\n          error.message ===\r\n            \"The email address is already in use by another account.\" &&\r\n            \"이미 있는 아이디입니다.\"\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          회원 가입\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\r\n          <Grid container spacing={2}>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={handleOnChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                value={name}\r\n                onChange={handleOnChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={handleOnChange}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            가입하기\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              이미 회원이신가?{\" \"}\r\n              <Button component={Link} to=\"/login\">\r\n                로그인\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signIn, signInWithGoogle } from \"../helpers/auth\";\r\n\r\n\r\n\r\n\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Button component={Link} to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Button>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    const type = e.target.name;\r\n    if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (type === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (email !== \"\" && password !== \"\") {\r\n      try {\r\n        await signIn(email, password).then((res) => console.log(res));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  return (    \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleOnSubmit} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"이메일을 입력하세요.\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={handleOnChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={handleOnChange}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleGoogleSignIn}\r\n            className={classes.submit}\r\n          >\r\n            구글 로그인\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              {/* <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link> */}\r\n            </Grid>\r\n            <Grid item>\r\n              <Button component={Link} to=\"/signup\">\r\n                {\"회원가입\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === false ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/chat\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PublicRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","import React, { useReducer, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { auth } from \"./services/firebase\";\r\n\r\n// import \"./styles.css\";\r\n\r\nimport Chat from \"./pages/Chat\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport Login from \"./pages/Login\";\r\nimport PublicRoute from \"./components/PublicRoute\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  loading: true,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"GET_USER\":\r\n      return { ...state, authenticated: action.result };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const { authenticated } = state;\r\n  \r\n  useEffect(() => {\r\n    auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch({\r\n          type: \"GET_USER\",\r\n          result: true,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"GET_USER\",\r\n          result: false,\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n  \r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {/* <PrivateRoute\r\n          path=\"/friend\"\r\n          authenticated={authenticated}\r\n          component={Friend}\r\n        /> */}\r\n        <PrivateRoute\r\n          path=\"/chat\"\r\n          authenticated={authenticated}\r\n          component={Chat}\r\n        />\r\n        <PublicRoute\r\n          path=\"/signup\"\r\n          authenticated={authenticated}\r\n          component={SignUp}\r\n        />\r\n        <PublicRoute\r\n          path={[\"/\", \"/login\"]}\r\n          authenticated={authenticated}\r\n          component={Login}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport chats from './chats';\r\n// import todos from './todos';\r\n\r\nconst rootReducer = combineReducers({\r\n  chats,\r\n//   todos,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nimport rootReducer from './modules';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nconst logger = createLogger();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger)),\r\n);\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}