{"version":3,"sources":["services/firebase.js","helpers/auth.js","components/Header.js","pages/Chat.js","helpers/database.js","pages/SignUp.js","pages/Login.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","firestore","signUp","email","password","console","log","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","Header","Fragment","Container","maxWidth","CssBaseline","AppBar","Toolbar","Typography","variant","onClick","signOut","useStyles","makeStyles","theme","root","width","flexDirection","backgroundColor","palette","background","paper","lBox","display","textAlign","rBox","appBar","top","bottom","left","height","inline","wordBreak","Chat","classes","useState","msg","setMsg","chats","setChats","handleSumbit","e","a","preventDefault","data","message","timestamp","Date","now","uid","currentUser","name","displayName","ref","push","scrollTo","document","documentElement","scrollHeight","behavior","getChatList","chatList","on","snapshot","forEach","row","val","getChats","useEffect","error","style","paddingBottom","className","List","length","map","index","ListItem","alignItems","Box","ListItemAvatar","justifyContent","Avatar","alt","src","ListItemText","primary","secondary","component","color","dateFns","position","onSubmit","Grid","container","spacing","item","xs","placeholder","value","onChange","Button","type","Copyright","align","Link","to","getFullYear","marginTop","avatar","margin","main","form","submit","SignUp","setEmail","setPassword","handleOnChange","handleOnSubmit","then","res","noValidate","TextField","required","fullWidth","id","label","autoComplete","mt","Login","handleGoogleSignIn","autoFocus","PublicRoute","Component","authenticated","rest","render","PrivateRoute","pathname","state","from","location","initialState","loading","reducer","action","result","App","useReducer","dispatch","onAuthStateChanged","user","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f10a2897.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC08-esU5opJSWKjtXw_t0UVSqMdsW582o\",\r\n  authDomain: \"react-with-firebase-5c1a1.firebaseapp.com\",\r\n  databaseURL: \"https://react-with-firebase-5c1a1-default-rtdb.firebaseio.com\",\r\n  projectId: \"react-with-firebase-5c1a1\",\r\n  storageBucket: \"react-with-firebase-5c1a1.appspot.com\",\r\n  messagingSenderId: \"605147249976\",\r\n  appId: \"1:605147249976:web:a58f0fa4a677fce40b55cd\",\r\n  measurementId: \"G-6XEVNKHBQ7\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth;\r\nexport const firestore = firebase.firestore();\r\nexport const database = firebase.database();\r\n\r\n//const provider = new firebase.auth.GoogleAuthProvider();\r\n// GoogleAuthProvider 클래스를 authentication 라이브러리에서 사용할 수 있도록 불러오는 코드.\r\n//provider.setCustomParameters({prompt: 'select_account'});\r\n// signIn이랑 authentication을 위해서 GoogleAuthProvider를 사용할 때마다 구글 팝업을 항상 띄우기를 원한다는 의미이다.\r\n//export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n// signInWithPopup 메소드는 여러 파라미터를 받을 수 있다. 트위터, 페이스북, 깃허브 등으로도 로그인이 필요할 수도 있으므로.\r\n// 여기에서는 google로 signIn할 것이기 때문에, 파라미터로 위에서 정의한 provider를 넣어준다.\r\n\r\n//export default firebase;\r\n// 혹시 전체 라이브러리가 필요할지도 모르기 때문에 firebase도 export 해준다.","import { auth } from \"../services/firebase\";\r\n\r\nexport function signUp(email, password) {\r\n    console.log('가입',email,password)\r\n  return auth().createUserWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function signIn(email, password) {\r\n  return auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return auth().signOut();\r\n}\r\n\r\nexport function signInWithGoogle() {\r\n  const provider = new auth.GoogleAuthProvider();\r\n  // provider.setCustomParameters({ prompt: 'select_account' });\r\n  return auth().signInWithPopup(provider);\r\n}\r\n","import React from 'react';\r\nimport { logout } from \"../helpers/auth\";\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n// import Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default function Header(props) {\r\n  return (\r\n      <React.Fragment>\r\n          <Container maxWidth=\"sm\">\r\n            <CssBaseline />\r\n            <HideOnScroll {...props}>\r\n                <AppBar>\r\n                <Toolbar>\r\n                            <Typography variant=\"h6\">동동님의 채팅방세상</Typography>\r\n                            <button onClick={() => { logout()}}>로그아웃</button>\r\n                </Toolbar>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            <Toolbar />\r\n      \r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}","import React,{useEffect,useState} from 'react';\r\n\r\nimport * as dateFns from \"date-fns\";\r\nimport { auth, database } from \"../services/firebase\";\r\nimport { getChats, sendChat } from \"../helpers/database\";\r\nimport { Container,Box,Grid,List,ListItem,ListItemText,ListItemAvatar,Avatar,Typography,Button  } from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Header from '../components/Header';\r\n\r\n/* icon */\r\n// import ImageIcon from '@material-ui/icons/Image';\r\n// import WorkIcon from '@material-ui/icons/Work';\r\n// import BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  lBox: {\r\n    flexDirection: 'row-reverse',\r\n    display: 'flex',\r\n    textAlign: 'right'\r\n  },\r\n  rBox: {\r\n    flexDirection: 'row-reverse',\r\n    display: 'flex',\r\n    textAlign: 'right'\r\n  },\r\n    appBar: {\r\n      top: 'auto',\r\n      bottom: 0,\r\n      left: 0,\r\n      width:'100%',\r\n      '& input,& button': {\r\n        width: '100%',\r\n        height: '50px'\r\n      }\r\n  },\r\n  inline: {\r\n    wordBreak: 'break-all',\r\n  }\r\n}));\r\n\r\nconst Chat = () => {\r\n  const classes = useStyles();\r\n\r\n  const scrollToBottom = () =>{ \r\n    window.scrollTo({ \r\n      top: document.documentElement.scrollHeight, \r\n      behavior: 'auto'\r\n      /* you can also use 'auto' behaviour \r\n         in place of 'smooth' */\r\n    }); \r\n  }; \r\n\r\nconst [msg, setMsg] = useState(\"\");\r\nconst [chats, setChats] = useState([]);\r\n  \r\nconst handleOnChange = (e) => {\r\n\tsetMsg(e.target.value);\r\n  };\r\n\r\nconst handleSumbit = async (e) => {\r\n  e.preventDefault();\r\n  setMsg('');\r\n  try{\r\n    await sendChat({\r\n      message: msg,\r\n      timestamp: Date.now(),\r\n      uid: auth().currentUser.uid,\r\n      name: auth().currentUser.displayName === null ? auth().currentUser.email : auth().currentUser.displayName\r\n    });\r\n    scrollToBottom();\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n};  \r\n\r\nconst getChatList = () => {\r\n  const chatList = getChats();\r\n  setChats(chatList);\r\n};\r\n\r\n  useEffect(() => {\r\n    \r\n    try {\r\n      database.ref(\"chats\").on(\"child_added\", getChatList);\r\n      database.ref(\"chats\").on(\"child_changed\", getChatList);\r\n      //scrollToBottom();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" style={{paddingBottom: '60px'}}>\r\n        <Header />\r\n        <div className=\"chat-middle\">\r\n          <List className={classes.root}>\r\n            {chats.length > 0 ? (\r\n              chats.map((data, index) => (\r\n                <ListItem key={index} alignItems=\"flex-start\" style={{ display: 'block' }}>\r\n                  <Box style={{\r\n                      display: 'flex',\r\n                    flexDirection: auth().currentUser.uid === data.uid ? 'row' : 'row-reverse',\r\n                        textAlign: auth().currentUser.uid === data.uid ? 'left' : 'right'\r\n                    }}>\r\n                    <ListItemAvatar style={{\r\n                          display: 'flex',\r\n                          justifyContent : auth().currentUser.uid !== data.uid ? 'flex-end' : 'flex-start',\r\n                      }}>\r\n                      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={data.name}\r\n                        secondary={\r\n                          <React.Fragment>\r\n                            <Typography\r\n                              component=\"span\"\r\n                              variant=\"body2\"\r\n                              className={classes.inline}\r\n                              color=\"textPrimary\"\r\n                            >\r\n                              {data.message}\r\n                            </Typography>\r\n                            <br />\r\n                            {dateFns.format(data.timestamp, \"yyyy-MM-dd-HH-mm-ss\")}\r\n                          </React.Fragment>\r\n                        }\r\n                      />\r\n                  </Box>\r\n                </ListItem>                  \r\n              ))\r\n              ) : (\r\n                <li>리스트가없습니다.</li>\r\n              )}\r\n          </List>\r\n      </div>\r\n      \r\n      <Box position=\"fixed\" color=\"primary\" className={classes.appBar}>\r\n        <Container maxWidth=\"sm\">\r\n          <form onSubmit={handleSumbit}>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={10} spacing={0}>\r\n                <input\r\n                  placeholder=\"내용을 입력하세요.\"\r\n                  value={msg}\r\n                  onChange={handleOnChange}\r\n                />\r\n              </Grid>\r\n              <Grid container item xs={2} spacing={0}>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">전송</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Container>\r\n      </Box>\r\n\r\n    </Container>\r\n    );\r\n};\r\n\r\nexport default Chat;","import { database } from \"../services/firebase\";\r\n\r\n\r\nexport function sendChat(data) {\r\n  console.log(data)\r\n  return database.ref(\"chats\").push({\r\n    message: data.message,\r\n    timestamp: data.timestamp,\r\n    uid: data.uid,\r\n    name: data.name\r\n  });\r\n}\r\n\r\nexport function getChats() {\r\n  let chats = [];\r\n  database.ref(\"chats\").on(\"value\", (snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chats.push(row.val());\r\n    });\r\n  });\r\n  return chats;\r\n}","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signUp } from \"../helpers/auth\";\r\n\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Button component={Link} to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Button>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nfunction SignUp() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    const type = e.target.name;\r\n    if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (type === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (email !== \"\" && password !== \"\") {\r\n      try {\r\n        await signUp(email, password).then((res) => console.log(res));\r\n      } catch (error) {\r\n        console.log(error)\r\n        console.log(error.message === 'The email address is already in use by another account.' && '이미 있는 아이디입니다.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          회원 가입\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleOnSubmit}>\r\n          <Grid container spacing={2}>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={handleOnChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={handleOnChange}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            가입하기\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              이미 회원이신가? <Button component={Link} to=\"/login\">로그인</Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signIn, signInWithGoogle } from \"../helpers/auth\";\r\n\r\n\r\n\r\n\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Button component={Link} to=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Button>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    const type = e.target.name;\r\n    if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (type === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (email !== \"\" && password !== \"\") {\r\n      try {\r\n        await signIn(email, password).then((res) => console.log(res));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  return (    \r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleOnSubmit} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"이메일을 입력하세요.\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={handleOnChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={handleOnChange}\r\n          />\r\n          {/* <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleGoogleSignIn}\r\n            className={classes.submit}\r\n          >\r\n            구글 로그인\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              {/* <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link> */}\r\n            </Grid>\r\n            <Grid item>\r\n              <Button component={Link} to=\"/signup\">\r\n                {\"회원가입\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === false ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/chat\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PublicRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","import React, { useReducer, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { auth } from \"./services/firebase\";\n\n// import \"./styles.css\";\n\nimport Chat from \"./pages/Chat\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nconst initialState = {\n  authenticated: false,\n  loading: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_USER\":\n      return { ...state, authenticated: action.result };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { authenticated } = state;\n  \n  useEffect(() => {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        dispatch({\n          type: \"GET_USER\",\n          result: true,\n        });\n      } else {\n        dispatch({\n          type: \"GET_USER\",\n          result: false,\n        });\n      }\n    });\n  }, []);\n  \n  return (\n    <Router>\n      <Switch>\n        <PrivateRoute\n          path=\"/chat\"\n          authenticated={authenticated}\n          component={Chat}\n        />\n        <PublicRoute\n          path=\"/signup\"\n          authenticated={authenticated}\n          component={SignUp}\n        />\n        <PublicRoute\n          path={[\"/\", \"/login\"]}\n          authenticated={authenticated}\n          component={Login}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}