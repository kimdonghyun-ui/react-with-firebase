{"version":3,"sources":["services/firebase.js","helpers/auth.js","pages/Chat.js","helpers/database.js","pages/SignUp.js","pages/Login.js","components/PublicRoute.js","components/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","firestore","signUp","email","password","console","log","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","Chat","useState","msg","setMsg","chats","setChats","handleSumbit","e","a","preventDefault","data","message","timestamp","Date","now","uid","currentUser","ref","push","getChatList","chatList","on","snapshot","forEach","row","val","getChats","useEffect","error","className","length","map","index","style","display","flexDirection","alignItems","onSubmit","placeholder","value","onChange","target","type","onClick","signOut","SignUp","setEmail","setPassword","handleOnChange","name","handleOnSubmit","then","res","to","Login","handleGoogleSignIn","PublicRoute","Component","component","authenticated","rest","render","props","PrivateRoute","pathname","state","from","location","initialState","loading","reducer","action","result","App","useReducer","dispatch","onAuthStateChanged","user","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e32a1f53.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC08-esU5opJSWKjtXw_t0UVSqMdsW582o\",\r\n  authDomain: \"react-with-firebase-5c1a1.firebaseapp.com\",\r\n  databaseURL: \"https://react-with-firebase-5c1a1-default-rtdb.firebaseio.com\",\r\n  projectId: \"react-with-firebase-5c1a1\",\r\n  storageBucket: \"react-with-firebase-5c1a1.appspot.com\",\r\n  messagingSenderId: \"605147249976\",\r\n  appId: \"1:605147249976:web:a58f0fa4a677fce40b55cd\",\r\n  measurementId: \"G-6XEVNKHBQ7\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth;\r\nexport const firestore = firebase.firestore();\r\nexport const database = firebase.database();\r\n\r\n//const provider = new firebase.auth.GoogleAuthProvider();\r\n// GoogleAuthProvider 클래스를 authentication 라이브러리에서 사용할 수 있도록 불러오는 코드.\r\n//provider.setCustomParameters({prompt: 'select_account'});\r\n// signIn이랑 authentication을 위해서 GoogleAuthProvider를 사용할 때마다 구글 팝업을 항상 띄우기를 원한다는 의미이다.\r\n//export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n// signInWithPopup 메소드는 여러 파라미터를 받을 수 있다. 트위터, 페이스북, 깃허브 등으로도 로그인이 필요할 수도 있으므로.\r\n// 여기에서는 google로 signIn할 것이기 때문에, 파라미터로 위에서 정의한 provider를 넣어준다.\r\n\r\n//export default firebase;\r\n// 혹시 전체 라이브러리가 필요할지도 모르기 때문에 firebase도 export 해준다.","import { auth } from \"../services/firebase\";\r\n\r\nexport function signUp(email, password) {\r\n    console.log('가입',email,password)\r\n  return auth().createUserWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function signIn(email, password) {\r\n  return auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return auth().signOut();\r\n}\r\n\r\nexport function signInWithGoogle() {\r\n  const provider = new auth.GoogleAuthProvider();\r\n  // provider.setCustomParameters({ prompt: 'select_account' });\r\n  return auth().signInWithPopup(provider);\r\n}\r\n","import React,{useEffect,useState} from 'react';\r\nimport { logout } from \"../helpers/auth\";\r\nimport { auth, database } from \"../services/firebase\";\r\nimport { getChats, sendChat } from \"../helpers/database\";\r\n\r\nconst Chat = () => {\r\n    \r\nconst [msg, setMsg] = useState(\"\");\r\nconst [chats, setChats] = useState([]);\r\n  \r\nconst handleOnChange = (e) => {\r\n\tsetMsg(e.target.value);\r\n  };\r\n\r\nconst handleSumbit = async (e) => {\r\n  e.preventDefault();\r\n  console.log(msg);\r\n  try{\r\n    await sendChat({\r\n      message: msg,\r\n      timestamp: Date.now(),\r\n      uid: auth().currentUser.uid,\r\n    });\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n};  \r\n\r\nconst getChatList = () => {\r\n  const chatList = getChats();\r\n  setChats(chatList);\r\n};\r\n\r\n  useEffect(() => {\r\n    try {\r\n      database.ref(\"chats\").on(\"child_added\", getChatList);\r\n      database.ref(\"chats\").on(\"child_changed\", getChatList);\r\n      //scrollToBottom();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n  \r\n    return (\r\n      <div className=\"chat-container\">\r\n            <div className=\"chat-top\">헤더</div>\r\n        <div className=\"chat-middle\">\r\n          \r\n  {chats.length > 0 ? (\r\n        chats.map((data, index) => (\r\n              <li className=\"chat-bubble send\" key={index} style={{ display:'flex',flexDirection:'column',alignItems:auth().currentUser.uid === data.uid ? 'flex-start' : 'flex-end'  }}>\r\n                <p>\r\n                  {data.message}\r\n                </p>\r\n            <span>{data.timestamp}</span>\r\n              </li>\r\n        ))\r\n      ) : (\r\n        <li>리스트가없습니다.</li>\r\n      )}\r\n{/* \r\n              <li className=\"chat-bubble send\">\r\n                <p>\r\n                  하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~\r\n                  하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~\r\n                  하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~하이룽~\r\n                </p>\r\n                <span>13:30PM</span>\r\n              </li>\r\n              <li className=\"chat-bubble receive\">\r\n                <p>방가방가!!</p>\r\n                <span>13:31PM</span>\r\n              </li> */}\r\n            </div>\r\n            <div className=\"chat-bottom\">\r\n              <form onSubmit={handleSumbit}>\r\n                <input\r\n                  placeholder=\"내용을 입력하세요.\"\r\n                  value={msg}\r\n                  onChange={handleOnChange}\r\n                />\r\n                <button type=\"submit\">전송</button>\r\n              </form>\r\n              </div>\r\n            <button onClick={() => { logout()}}>로그아웃</button>\r\n          </div>\r\n    );\r\n};\r\n\r\nexport default Chat;","import { database } from \"../services/firebase\";\r\n\r\n\r\nexport function sendChat(data) {\r\n  return database.ref(\"chats\").push({\r\n    message: data.message,\r\n    timestamp: data.timestamp,\r\n    uid: data.uid,\r\n  });\r\n}\r\n\r\nexport function getChats() {\r\n  let chats = [];\r\n  database.ref(\"chats\").on(\"value\", (snapshot) => {\r\n    snapshot.forEach((row) => {\r\n      chats.push(row.val());\r\n    });\r\n  });\r\n  return chats;\r\n}","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signUp } from \"../helpers/auth\";\r\n\r\nfunction SignUp() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    const type = e.target.name;\r\n    if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (type === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (email !== \"\" && password !== \"\") {\r\n      try {\r\n        await signUp(email, password).then((res) => console.log(res));\r\n      } catch (error) {\r\n        console.log(error)\r\n        console.log(error.message === 'The email address is already in use by another account.' && '이미 있는 아이디입니다.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-container\">\r\n      <div className=\"sign-up-wrap\">\r\n        <h1 className=\"title\">회원가입</h1>\r\n        <form className=\"sign-up-form\" onSubmit={handleOnSubmit}>\r\n          <div>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"이메일을 입력하세요.\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"비밀번호를 입력하세요.\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">회원가입</button>\r\n          </div>\r\n        </form>\r\n        <hr></hr>\r\n        <p>\r\n          이미 회원이신가? <Link to=\"/login\">로그인</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signIn, signInWithGoogle } from \"../helpers/auth\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleOnChange = (e) => {\r\n    const type = e.target.name;\r\n    if (type === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else if (type === \"password\") {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (email !== \"\" && password !== \"\") {\r\n      try {\r\n        await signIn(email, password).then((res) => console.log(res));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      await signInWithGoogle();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"sign-container\">\r\n      <div className=\"sign-wrap\">\r\n        <h1 className=\"title\">로그인</h1>\r\n        <form className=\"sign-form\" onSubmit={handleOnSubmit}>\r\n          <div>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"이메일을 입력하세요.\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"비밀번호를 입력하세요.\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">로그인</button>\r\n          </div>\r\n        </form>\r\n        <hr></hr>\r\n        <button\r\n          type=\"button\"\r\n          className=\"sign-social-btn google-login\"\r\n          onClick={handleGoogleSignIn}\r\n        >\r\n          구글 로그인\r\n        </button>\r\n        <hr></hr>\r\n        <p>\r\n          회원이 아니신가? <Link to=\"/signup\">회원가입</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === false ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/chat\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PublicRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;","import React, { useReducer, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { auth } from \"./services/firebase\";\n\n// import \"./styles.css\";\n\nimport Chat from \"./pages/Chat\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nconst initialState = {\n  authenticated: false,\n  loading: true,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"GET_USER\":\n      return { ...state, authenticated: action.result };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { authenticated } = state;\n  \n  useEffect(() => {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        dispatch({\n          type: \"GET_USER\",\n          result: true,\n        });\n      } else {\n        dispatch({\n          type: \"GET_USER\",\n          result: false,\n        });\n      }\n    });\n  }, []);\n  \n  return (\n    <Router>\n      <Switch>\n        <PrivateRoute\n          path=\"/chat\"\n          authenticated={authenticated}\n          component={Chat}\n        />\n        <PublicRoute\n          path=\"/signup\"\n          authenticated={authenticated}\n          component={SignUp}\n        />\n        <PublicRoute\n          path={[\"/\", \"/login\"]}\n          authenticated={authenticated}\n          component={Login}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}